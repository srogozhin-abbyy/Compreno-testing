/* 
 * ata
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
	/// <summary>
	/// ObjectID
	/// </summary>
	[DataContract]
	[JsonConverter(typeof(ObjectIdConverter))]
	public partial class ObjectID :  IEquatable<ObjectID>, IValidatableObject
	{
		private string Id { get; set; }

		/// <summary>
		/// Initializes a new instance of the <see cref="ObjectID" /> class.
		/// </summary>
		[JsonConstructorAttribute]
		public ObjectID()
		{
		}
		/// <summary>
		/// Hack: store MongoDB ID as plain string
		/// </summary>
		/// <param name="id"></param>
		public ObjectID(string id)
		{
			Id = id;
		}
		/// <summary>
		/// Returns the string presentation of the object
		/// </summary>
		/// <returns>String presentation of the object</returns>
		public override string ToString()
		{
			return Id;
		}
  
		/// <summary>
		/// Returns the JSON string presentation of the object
		/// </summary>
		/// <returns>JSON string presentation of the object</returns>
		public string ToJson()
		{
			return JsonConvert.SerializeObject(this, Formatting.Indented);
		}

		/// <summary>
		/// Returns true if objects are equal
		/// </summary>
		/// <param name="obj">Object to be compared</param>
		/// <returns>Boolean</returns>
		public override bool Equals(object obj)
		{
			// credit: http://stackoverflow.com/a/10454552/677735
			return this.Equals(obj as ObjectID);
		}

		/// <summary>
		/// Returns true if ObjectID instances are equal
		/// </summary>
		/// <param name="other">Instance of ObjectID to be compared</param>
		/// <returns>Boolean</returns>
		public bool Equals(ObjectID other)
		{
			// credit: http://stackoverflow.com/a/10454552/677735
			if (other == null)
				return false;

			return false;
		}

		/// <summary>
		/// Gets the hash code
		/// </summary>
		/// <returns>Hash code</returns>
		public override int GetHashCode()
		{
			// credit: http://stackoverflow.com/a/263416/677735
			unchecked // Overflow is fine, just wrap
			{
				int hash = 41;
				// Suitable nullity checks etc, of course :)
				return hash;
			}
		}

		public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
		{ 
			yield break;
		}
	}

	/// <summary>
	/// http://stackoverflow.com/questions/16651776/json-net-cast-error-when-serializing-mongo-objectid
	/// </summary>
	class ObjectIdConverter : JsonConverter
	{
		public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
		{
			serializer.Serialize(writer, value.ToString());
		}
		public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
		{
			return new ObjectID(reader.Value.ToString());
		}
		public override bool CanConvert(Type objectType)
		{
			return typeof(ObjectID).IsAssignableFrom(objectType);
		}
	}
}
